##############################
Plains
	Abilities:
		T: self.controller.mana.add(mana.Mana.WHITE, 1)


############################################################
Island
	Abilities:
		T: self.controller.mana.add(mana.Mana.BLUE, 1)


############################################################
Swamp
	Abilities:
		T: self.controller.mana.add(mana.Mana.BLACK, 1)


############################################################
Mountain
	Abilities:
		T: self.controller.mana.add(mana.Mana.RED, 1)


############################################################
Forest
	Abilities:
		T: self.controller.mana.add(mana.Mana.GREEN, 1)


############################################################
Lightning Strike
	Targets:
		'creature or player'
	targets[0].take_damage(self, 3)


############################################################
Congregate
	Targets:
		'player'
	targets[0].gain_life(2 * len([p for plyr in self.controller.game.players_list
																for p in plyr.battlefield
																if p.is_creature]))


############################################################
Mass Calcify
	self.game.apply_to_battlefield(
						lambda p: p.destroy(),
						lambda p: p.is_creature and not p.has_color('W'))


############################################################
Ajani's Pridemate
	Triggers:
		onControllerLifeGain
			self.card.add_counter("+1/+1") if self.controller.make_choice(
							"Would you like to put a +1/+1 counter on %r?" % self.card)
																else None


############################################################
Tireless Missionaries
	Triggers:
		onEtB
			self.controller.gain_life(3)


############################################################
Soulmender
	Abilities:
		T: self.controller.gain_life(1)


############################################################
Divination
	self.controller.draw(2)


############################################################
Jace's Ingenuity
	self.controller.draw(3)


############################################################
Titanic Growth
	Targets:
		'creature'
	targets[0].add_effect('modifyPT',
												(4, 4), self, self.game.eot_time)


############################################################
Ulcerate
	Targets:
		'creature'
	targets[0].add_effect('modifyPT', (-3, -3),
												self, self.game.eot_time)
	self.controller.lose_life(3)


############################################################
Zof Shade
	Abilities:
		2B: self.card.add_effect('modifyPT', (2, 2), self, self.game.eot_time)


############################################################
Mind Rot
	Targets:
		'player'
	targets[0].discard(2)


############################################################
Shadowcloak Vampire
	Abilities:
		Pay 2 life: self.card.add_effect('gainAbility', 'Flying', self, self.game.eot_time)


############################################################
First Response
	Triggers:
		onUpkeep
			self.controller.create_token('1/1 white Soldier')
				If:
					self.controller.last_turn_events['life loss']


############################################################
Raise the Alarm
	self.controller.create_token('1/1 white Soldier', 2)


############################################################
Resolute Archangel
	Triggers:
		onEtB
			self.controller.set_life_total(self.controller.startingLife)
				If:
					self.controller.life < self.controller.startingLife


############################################################
Sanctified Charge
	[c.add_effect('modifyPT', (2, 1), self, self.game.eot_time)
								for c in self.controller.battlefield if c.is_creature]
	[c.add_effect('gainAbility', 'First Strike', self, self.game.eot_time)
								for c in self.controller.battlefield if c.is_creature and c.has_color('W')]


############################################################
Aetherspouts
	self.game.apply_to_battlefield(
			lambda p: p.change_zone(p.owner.library, 0, False)
									if p.owner.make_choice(
											"Would you like to put %r on top of your library?"
											" (otherwise it goes on bottom)" % p)
									else p.change_zone(p.owner.library, -1, False),
			lambda p: p.status.is_attacking)


############################################################
Devouring Light
	Targets:
		p.is_permanent and (p.is_creature and p.in_combat)
	targets[0].exile()


############################################################
Triplicate Spirits
	self.controller.create_token('1/1 white Spirit', 3, 'Flying')


############################################################
Meditation Puzzle
	self.controller.gain_life(8)


############################################################
Pillar of Light
	Targets:
		p.is_permanent and (p.is_creature and p.toughness >= 4)
	targets[0].exile()


############################################################
Chronostutter
	Targets:
		'creature'
	targets[0].change_zone(t[0].owner.library, 1, False)


############################################################
Coral Barrier
	Triggers:
		onEtB
			self.controller.create_token('1/1 blue Squid', 1, 'Islandwalk')


############################################################
Hydrosurge
	Targets:
		'creature'
	targets[0].add_effect('modifyPT',
												(-5, 0), self, self.game.eot_time)


############################################################
Mind Sculpt
	Targets:
		'opponent'
	targets[0].mill(7)


############################################################
Peel from Reality
	Targets:
		p.is_permanent and p.is_creature
					   and p.controller is self.controller
			Prompt:
				Choose target creature you control\n
		p.is_permanent and p.is_creature
					   and p.controller is not self.controller
			Prompt:
				Choose target creature you don't control\n
	[targets[i].bounce() for i in range(2) if is_legal_target[i]]


############################################################
Grindclock
	Abilities:
		T: self.card.add_counter("Charge")
		T: self.targets_chosen[0].mill(self.card.num_counters('Charge'))
			Targets:
				'player'


############################################################
Battle Mastery
	Aura:
		Targets:
			'creature'
		self.add_ability("Double Strike")


############################################################
Marked by Honor
	Aura:
		Targets:
			'creature'
		self.add_PT((2, 2))
		self.add_ability("Vigilance")


############################################################
Dauntless River Marshal
	Abilities:
		3U: self.targets_chosen[0].tap()
			Targets:
				'creature'


############################################################
Divine Favor
	Aura:
		Targets:
			'creature'
		self.add_PT((1, 3))
	Triggers:
		onEtB
			self.controller.gain_life(3)


############################################################
Kinsbaile Skirmisher
	Triggers:
		onEtB
			self.targets_chosen[0].add_effect("modifyPT", (1, 1), self, self.game.eot_time)
				Targets:
					'creature'


############################################################
Ephemeral Shields
	Targets:
		'creature'
	self.targets_chosen[0].add_effect('gainAbility', 'Indestructible', self, self.game.eot_time)


############################################################
Heliod's Pilgrim
	Triggers:
		onEtB
			self.controller.search_lib(lambda c: c.is_aura) if self.controller.make_choice(
							"Would you like to search your library for an aura?")
																else None


############################################################
Preeminent Captain
	# Triggers:
	# 	onAttack
	# 		self.controller.... if self.controller.make_choice(
	# 						"Would you like to %s?" % '...')
	# 															else None


############################################################
Selfless Cathar
	Abilities:
		# the reason why we need this big fat lambda is b/c list comprehension doesn't take in class variable namespace otherwise
		# so it raises NameError: name 'self' is not defined
		1W, Sacrifice ~: (lambda self=self: [c.add_effect('modifyPT', (1, 1), self, self.game.eot_time)
								for c in self.controller.battlefield if c.is_creature])()


############################################################
Wall of Essence
	Triggers:
		onTakeCombatDamage
			self.controller.gain_life(self.trigger_amount)


############################################################
Dauntless River Marshal
	StaticEffects:
		'self'
			'modifyPT'
			(1,1)
			lambda eff: eff.source.controller.controls(subtype="Island")


############################################################
Warden of the Beyond
	StaticEffects:
		'self'
			'modifyPT'
			(2,2)
			lambda eff: len(eff.source.controller.opponent.exile) > 0


############################################################
Aeronaut Tinkerer
	StaticEffects:
		'self'
			'gainAbility'
			'Flying'
			lambda eff: eff.source.controller.controls(types="Artifact")


############################################################
Chasm Skulker
	Triggers:
		onControllerDrawCard
			self.card.add_counter("+1/+1")
		onDeath
			self.controller.create_token("1/1 blue Squid",
						self.card.num_counters("+1/+1"), "Islandwalk")


############################################################
Frost Lynx
	Triggers:
		onEtB
			self.targets_chosen[0].tap()
			self.targets_chosen[0].freeze()
				Targets:
					'opponent creature'


############################################################
Paragon of New Dawns
	StaticEffects:
		'controller -self'
			'modifyPT'
			(1, 1)
			lambda eff: eff.apply_target.is_creature and eff.apply_target.has_color("W")
	Abilities:
		W, T: self.targets_chosen[0].add_effect("gainAbility", "Vigilance", self, self.game.eot_time)
			Targets:
				p.is_permanent and p.is_creature
								and p.controller == self.controller and p != self
								and p.has_color("W")


############################################################
Paragon of Gathering Mists
	StaticEffects:
		'controller -self'
			'modifyPT'
			(1, 1)
			lambda eff: eff.apply_target.is_creature and eff.apply_target.has_color("U")
	Abilities:
		U, T: self.targets_chosen[0].add_effect("gainAbility", "Flying", self, self.game.eot_time)
			Targets:
				p.is_permanent and p.is_creature
								and p.controller == self.controller and p != self
								and p.has_color("U")


############################################################
Void Snare
	Targets:
		p.is_permanent and not p.is_land
	p.bounce()


############################################################
Black Cat
	Triggers:
		onDeath
			self.targets_chosen[0].discard(random=True)
				Targets:
					'opponent'


############################################################
Ajani Steadfast


############################################################
Avacyn, Guardian Angel


############################################################
Boonweaver Giant


############################################################
Constricting Sliver


############################################################
Hushwing Gryff


############################################################
Midnight Guard


############################################################
Oppressive Rays


############################################################
Preeminent Captain


############################################################
Return to the Ranks


############################################################
Seraph of the Masses


############################################################
Soul of Theros


############################################################
Spectra Ward


############################################################
Spirit Bonds


############################################################
Amphin Pathmage


############################################################
Chief Engineer


############################################################
Diffusion Sliver


############################################################
Dissipate
	Targets:
		'spell'
	targets[0].counter(source=self)

############################################################
Encrust


############################################################
Ensoul Artifact


############################################################
Frost Lynx


############################################################
Glacial Crasher


############################################################
Illusory Angel


############################################################
Invisibility


############################################################
Jace, the Living Guildpact


############################################################
Jalira, Master Polymorphist


############################################################
Jorubai Murk Lurker


############################################################
Kapsho Kitefins


############################################################
Master of Predicaments


############################################################
Mercurial Pretender


############################################################
Military Intelligence


############################################################
Negate
	Targets:
		'instant or sorcery spell'
	targets[0].counter(source=self)


############################################################
Quickling


############################################################
Research Assistant


############################################################
Soul of Ravnica


############################################################
Statute of Denial


############################################################
Stormtide Leviathan


############################################################
Turn to Frog


############################################################
Wall of Frost


############################################################
Welkin Tern


############################################################
Blood Host


############################################################
Carrion Crow


############################################################
Caustic Tar


############################################################
Covenant of Blood


############################################################
Crippling Blight


############################################################
Cruel Sadist


############################################################
Endless Obedience


############################################################
Eternal Thirst


############################################################
Feast on the Fallen


############################################################
Festergloom


############################################################
Flesh to Dust

	Targets:
		'enchantment'
	targets[0].destroy()

############################################################
Gravedigger

	Triggers:
		onEtB
			self.controller.search_grave(lambda c: c.is_aura) if self.controller.make_choice
			Targets:
				p.is_creature and p.graveyard
			target[0].change_zone(self.controller.hand) if self.controller.make_choice(
					"Would you like return %r from your graveyard to your hand?" % target.card)
														else None

############################################################
In Garruk's Wake


############################################################
Indulgent Tormentor


############################################################
Leeching Sliver


############################################################
Liliana Vess


############################################################
Necrobite


############################################################
Necrogen Scudder


############################################################
Necromancer's Assistant


############################################################
Necromancer's Stockpile


############################################################
Nightfire Giant


############################################################
Ob Nixilis, Unshackled


############################################################
Paragon of Open Graves


############################################################
Rotfeaster Maggot


############################################################
Sign in Blood


############################################################
Soul of Innistrad


############################################################
Stab Wound
	Aura:
		Targets:
			'creature'
		self.subt_PT((2, 2))

	Triggers:
		onUpkeep
			p.controller.lose_life(2)

############################################################
Stain the Mind


############################################################
Unmake the Graves


############################################################
Wall of Limbs


############################################################
Waste Not


############################################################
Xathrid Slyblade


############################################################
Act on Impulse


############################################################
Aggressive Mining


############################################################
Altac Bloodseeker


############################################################
Belligerent Sliver


############################################################
Blastfire Bolt


############################################################
Borderland Marauder


############################################################
Brood Keeper


############################################################
Burning Anger


############################################################
Chandra, Pyromaster


############################################################
Circle of Flame


############################################################
Clear a Path


############################################################
Cone of Flame


############################################################
Crowd's Favor


############################################################
Crucible of Fire


############################################################
Forge Devil
	Triggers:
		onEtB
			self.targets_chosen[0].take_damage(self, 1)
			self.controller.take_damage(self, 1)
				Targets:
					'creature'


############################################################
Foundry Street Denizen


############################################################
Frenzied Goblin


############################################################
Generator Servant


############################################################
Goblin Kaboomist


############################################################
Goblin Rabblemaster


############################################################
Hammerhand


############################################################
Heat Ray


############################################################
Hoarding Dragon


############################################################
Inferno Fist


############################################################
Kird Chieftain


############################################################
Kurkesh, Onakke Ancient


############################################################
Lava Axe


############################################################
Might Makes Right


############################################################
Miner's Bane


############################################################
Paragon of Fierce Defiance


############################################################
Rummaging Goblin


############################################################
Scrapyard Mongrel


############################################################
Shrapnel Blast


############################################################
Siege Dragon


############################################################
Soul of Shandalar


############################################################
Stoke the Flames


############################################################
Torch Fiend


############################################################
Wall of Fire

	Abilities:
		R: self.card.add_effect('modifyPT', (1, 0), self, self.game.eot_time)


############################################################
Ancient Silverback


############################################################
Back to Nature

	self.game.apply_to_battlefield(
						lambda p: p.destroy(),
						lambda p: p.is_enchantment

############################################################
Carnivorous Moss-Beast


############################################################
Charging Rhino


############################################################
Chord of Calling


############################################################
Elvish Mystic

	Abilities:
		T: self.controller.mana.add(mana.Mana.GREEN, 1)

############################################################
Feral Incarnation

	self.controller.create_token('3/3 green Beast', 3)

############################################################
Gather Courage


############################################################
Genesis Hydra


############################################################
Hornet Nest


############################################################
Hornet Queen


############################################################
Hunt the Weak


############################################################
Hunter's Ambush


############################################################
Invasive Species

	Triggers:
		onEtB
			Targets:
				Prompt:
					Return another permanent you control to its owner's hand\n
				p.is_permanent and p.controller is self.controller
			target[0].change_zone(self.controller.hand)

############################################################
Kalonian Twingrove


############################################################
Life's Legacy


############################################################
Living Totem


############################################################
Naturalize
	Targets:
		p.is_permanent
					and (p.is_artifact or p.is_enchantment)
	targets[0].destroy()


############################################################
Netcaster Spider


############################################################
Nissa, Worldwaker


############################################################
Nissa's Expedition


############################################################
Overwhelm


############################################################
Paragon of Eternal Wilds


############################################################
Phytotitan


############################################################
Plummet


############################################################
Ranger's Guile


############################################################
Reclamation Sage


############################################################
Restock


############################################################
Roaring Primadox


############################################################
Satyr Wayfinder


############################################################
Shaman of Spring


############################################################
Siege Wurm


############################################################
Soul of Zendikar


############################################################
Sunblade Elf


############################################################
Undergrowth Scavenger


############################################################
Venom Sliver


############################################################
Verdant Haven


############################################################
Vineweft


############################################################
Wall of Mulch


############################################################
Yisan, the Wanderer Bard


############################################################
Garruk, Apex Predator


############################################################
Sliver Hivelord


############################################################
Avarice Amulet


############################################################
Brawler's Plate


############################################################
The Chain Veil


############################################################
Gargoyle Sentinel


############################################################
Grindclock


############################################################
Haunted Plate Mail


############################################################
Hot Soup


############################################################
Juggernaut


############################################################
Meteorite


############################################################
Obelisk of Urd


############################################################
Perilous Vault


############################################################
Phyrexian Revoker


############################################################
Profane Memento


############################################################
Rogue's Gloves


############################################################
Sacred Armory


############################################################
Scuttling Doom Engine


############################################################
Shield of the Avatar


############################################################
Soul of New Phyrexia


############################################################
Staff of the Death Magus


############################################################
Staff of the Flame Magus


############################################################
Staff of the Mind Magus


############################################################
Staff of the Sun Magus


############################################################
Staff of the Wild Magus


############################################################
Tormod's Crypt


############################################################
Tyrant's Machine


############################################################
Will-Forged Golem


##############################
Battlefield Forge

	Abilities:
		T: self.controller.mana.add(mana.Mana.COLORLESS, 1)
		T: self.controller.mana.add(mana.Mana.RED, 1), self.controller.lose_life(1)
		T: self.controller.mana.add(mana.Mana.WHITE, 1), self.controller.lose_life(1)

##############################
Caves of Koilos

	Abilities:
		T: self.controller.mana.add(mana.Mana.COLORLESS, 1)
		T: self.controller.mana.add(mana.Mana.WHITE, 1), self.controller.lose_life(1)
		T: self.controller.mana.add(mana.Mana.BLACK, 1), self.controller.lose_life(1)

##############################
Darksteel Citadel

	Abilities:
		T: self.controller.mana.add(mana.Mana.COLORLESS, 1)

##############################
Evolving Wilds

	Abilities:
		T Sacrifice: self.controller.search_lib(lambda c: c.is_land) if self.controller.make_choice(
							"Would you like to search your library for a land?")
																else None

##############################
Llanowar Wastes

	Abilities:
		T: self.controller.mana.add(mana.Mana.COLORLESS, 1)
		T: self.controller.mana.add(mana.Mana.BLACK, 1), self.controller.lose_life(1)
		T: self.controller.mana.add(mana.Mana.GREEN, 1), self.controller.lose_life(1)

##############################
Radiant Fountain

	Triggers:
		onEtB
			self.controller.gain_life(2)

	Abilities:
		T: self.controller.mana.add(mana.Mana.COLORLESS, 1)

##############################
Shivan Reef

	Abilities:
		T: self.controller.mana.add(mana.Mana.COLORLESS, 1)
		T: self.controller.mana.add(mana.Mana.BLUE, 1), self.controller.lose_life(1)
		T: self.controller.mana.add(mana.Mana.RED, 1), self.controller.lose_life(1)


##############################
Sliver Hive



##############################
Urborg, Tomb of Yawgmoth



##############################
Yavimaya Coast

	Abilities:
		T: self.controller.mana.add(mana.Mana.COLORLESS, 1)
		T: self.controller.mana.add(mana.Mana.GREEN, 1), self.controller.lose_life(1)
		T: self.controller.mana.add(mana.Mana.BLUE, 1), self.controller.lose_life(1)


############################################################
Aegis Angel


############################################################
Divine Verdict
	Targets:
		'creature'
	targets[0].counter(source=self)
			lambda p: p.status.is_attacking)
			lambda p: p.status.is_blocking)

############################################################
Inspired Charge


############################################################
Cancel
	Targets:
		'spell'
	targets[0].counter(source=self)


############################################################
Nightmare


############################################################
Sengir Vampire


############################################################
Furnace Whelp
	Abilities:
		R: self.card.add_effect('modifyPT', (1, 0), self, self.game.eot_time)


############################################################
Seismic Strike


############################################################
Shivan Dragon


############################################################
Garruk's Packleader


############################################################
Terra Stomper


##############################